{"version":3,"sources":["webpack:///webpack/bootstrap 8aab127a2db87f5036bb","webpack:///./modules/core-deps.js","webpack:///./modules/common/common.js","webpack:///./modules/common/search-controller.js","webpack:///./modules/common/mailbox-controller.js","webpack:///./modules/common/mail-controller.js","webpack:///./modules/common/api-service.js","webpack:///./modules/dashboard/dashboard.js","webpack:///./modules/editor/editor.js","webpack:///./modules/editor/editor-controller.js","webpack:///./modules/home/home.js","webpack:///./modules/home/home-controller.js","webpack:///./modules/home/budgraph-factory.js","webpack:///./modules/home/budgraph-controller.js","webpack:///./modules/home/timeline-controller.js","webpack:///./modules/profile/profile.js","webpack:///./modules/profile/profile-controller.js","webpack:///./modules/viewer/viewer.js","webpack:///./modules/viewer/viewer-controller.js","webpack:///./modules/viewer/viewer-sharebox-controller.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACtBA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,EAAC;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,MAAK;AACL;AACA,MAAK;AACL;AACA,EAAC;;;;;;;;;;;AC3BD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;;;;ACbD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,iCAAiC;AAClD;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,IAAG,aAAa;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,sEAAsE;AAC1F,MAAK;AACL;AACA,qBAAoB,mFAAmF;AACvG,MAAK;AACL;AACA,qBAAoB,wDAAwD;AAC5E,MAAK;AACL;AACA,qBAAoB,2EAA2E;AAC/F,MAAK;AACL;AACA,qBAAoB,yFAAyF;AAC7G,MAAK;AACL;AACA;AACA,qBAAoB,oEAAoE;AACxF,MAAK;AACL;AACA,qBAAoB,oEAAoE;AACxF,MAAK;AACL;AACA,qBAAoB,mFAAmF;AACvG,MAAK;AACL;AACA;AACA,qBAAoB,iGAAiG;AACrH,MAAK;AACL;AACA;AACA,qBAAoB,yFAAyF;AAC7G,MAAK;AACL;AACA,qBAAoB,2FAA2F;AAC/G,MAAK;AACL;AACA;AACA,qBAAoB,0FAA0F;AAC9G,MAAK;AACL;AACA,qBAAoB,4FAA4F;AAChH,MAAK;AACL;AACA;AACA,qBAAoB,mGAAmG;AACvH,MAAK;AACL;AACA,qBAAoB,4FAA4F;AAChH,MAAK;AACL;AACA;AACA,qBAAoB,0FAA0F;AAC9G,MAAK;AACL;AACA;AACA,uBAAsB,wGAAwG;AAC9H,QAAO;AACP;AACA,uBAAsB,uFAAuF;AAC7G,QAAO;AACP;AACA,uBAAsB,uGAAuG;AAC7H,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,uBAAsB,+FAA+F;AACrH,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,yEAAyE;AAC7F,MAAK;AACL;AACA;;AAEA;AACA;AACA,qBAAoB,mGAAmG;AACvH,MAAK;AACL;AACA,qBAAoB,mGAAmG;AACvH,MAAK;AACL;AACA,qBAAoB,mGAAmG;AACvH,MAAK;AACL;AACA,qBAAoB,qGAAqG;AACzH,MAAK;AACL;AACA,qBAAoB,oFAAoF;AACxG;AACA;;AAEA;AACA;AACA,qBAAoB,yDAAyD;AAC7E;AACA;;AAEA;AACA;AACA,qBAAoB,0DAA0D;AAC9E;AACA;;AAEA;AACA;AACA,qBAAoB,0DAA0D;AAC9E;AACA;;AAEA;AACA;AACA,qBAAoB,iEAAiE;AACrF,MAAK;AACL;AACA,qBAAoB,yDAAyD;AAC7E;AACA;;AAEA;AACA;AACA,qBAAoB,wEAAwE;AAC5F;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;AChND;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,0BAA0B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA,mCAAkC,iBAAiB;AACnD;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,QAAO;AACP,MAAK;;;;;;;;;;ACxBL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA0B;;AAE1B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc,EAAE,eAAe;AAC7D,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA,gCAA+B,2BAA2B,EAAE,eAAe;AAC3E,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;;;;AAIA;AACA;AACA;;AAEA,IAAG;;AAEH,EAAC;;;;;;;;;;AC/KD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP,MAAK;;;;;;;;;;AC9CL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,yBAAwB;AACxB;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,4CAA2C,yBAAyB,EAAE;AACtE;AACA;AACA;AACA,YAAW;AACX;AACA,2BAA0B;AAC1B;AACA,QAAO;;AAEP;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB;AACxB;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;;;;;;;;AC3ED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA,wBAAuB,iBAAiB;AACxC;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;;AAEA;;AAEA,sBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAe;;AAEf;AACA;AACA;AACA,gBAAe;;;AAGf;AACA,YAAW;;AAEX,UAAS,EAAE;;AAEX;AACA;;AAEA;;AAEA;AACA;;AAEA,wBAAuB,mCAAmC;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAK;;;;;;;;;;ACvJL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA,6BAA4B,WAAW;AACvC,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB;AACxB;AACA;AACA,IAAG;;AAEH,EAAC;;;;;;;;;;ACpED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;;;;ACfD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,QAAO;AACP,MAAK;;;;;;;;;;ACxBL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iGAAgG,aAAa;AAC7G,EAAC;;;;;;;;;;ACTD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,EAAE;;AAEX,gDAA+C,6BAA6B,EAAE;AAC9E,MAAK;;;;;;;;;;ACpCL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,uDAAsD,iBAAiB;AACvE,MAAK;AACL,8CAA6C,iBAAiB;AAC9D;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,6BAA4B,uBAAuB;AACnD;;AAEA;AACA,6BAA4B,yCAAyC;AACrE;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA,UAAS;;AAET,QAAO;AACP;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;;;;;;;;AC9aD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,yBAAyB,EAAE;AACnE;;AAEA;AACA;AACA;AACA,2CAA0C,yBAAyB,EAAE;AACrE,MAAK;AACL;;AAEA;AACA;AACA,iDAAgD,yBAAyB,EAAE;AAC3E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8aab127a2db87f5036bb\n **/","require('./common/common.js');\nrequire('./common/search-controller.js');\nrequire('./common/mailbox-controller.js');\nrequire('./common/mail-controller.js');\nrequire('./common/api-service.js');\n\nrequire('./dashboard/dashboard.js');\n\nrequire('./editor/editor.js');\nrequire('./editor/editor-controller.js');\n\nrequire('./home/home.js');\nrequire('./home/home-controller.js');\nrequire('./home/budgraph-factory.js');\nrequire('./home/budgraph-controller.js');\nrequire('./home/timeline-controller.js');\n\nrequire('./profile/profile.js');\nrequire('./profile/profile-controller.js');\n\nrequire('./viewer/viewer.js');\nrequire('./viewer/viewer-controller.js');\nrequire('./viewer/viewer-sharebox-controller.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/core-deps.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Module definition for common components used by other all other app modules.\r\n */\r\n\r\nangular.module('qibud.common', ['ui.bootstrap']);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/common/common.js\n ** module id = 1\n ** module chunks = 0\n **/","\r\nangular.module('qibud.common').controller('SearchCtrl',\r\nfunction ($scope, api) {\r\n  $scope.results = {};\r\n  $scope.search = function(query) {\r\n    if(query) {\r\n      api.buds.search(query).success(function (results) {\r\n        if(results.hits){\r\n          if(results.hits.total > 0) {\r\n            $scope.results = results.hits.hits.map(function(item){\r\n              return item;\r\n            });\r\n          } else {\r\n            $scope.results = {}\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/common/search-controller.js\n ** module id = 2\n ** module chunks = 0\n **/","\r\nangular.module('qibud.common').controller('MailboxCtrl',\r\nfunction ($scope, $modal, api)\r\n{\r\n  $scope.emails = {};\r\n  api.mailboxes.get().success(function (emails) {\r\n    $scope.emails = emails;\r\n  });\r\n\r\n  $scope.openEmail = function (email) {\r\n    var modalInstance = $modal.open({\r\n      templateUrl: 'mail.html',\r\n      controller: 'MailConverterCtrl',\r\n      size: 'lg',\r\n      resolve: {\r\n        email: function () {\r\n          return email;\r\n        }\r\n      }\r\n    });\r\n\r\n    modalInstance.result.then(function (budId) {\r\n      //view bud\r\n\r\n    }, function () {\r\n      //dismiss\r\n    });\r\n  };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/common/mailbox-controller.js\n ** module id = 3\n ** module chunks = 0\n **/","\r\nangular.module('qibud.common').controller('MailConverterCtrl',\r\nfunction ($scope, $modalInstance, email) {\r\n\r\n  $scope.email = email;\r\n\r\n  $scope.ok = function () {\r\n    $modalInstance.close($scope.selectedUsers);\r\n  };\r\n\r\n  $scope.cancel = function () {\r\n    $modalInstance.dismiss('cancel');\r\n  };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/common/mail-controller.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Service for providing access the backend API via HTTP and WebSockets.\r\n */\r\n\r\nangular.module('qibud.common').factory('api', function ($rootScope, $http, $window) {\r\n\r\n  var apiBase = 'api' /* base /api uri */,\r\n      token = ($window.sessionStorage.token || $window.localStorage.token),\r\n      headers = {Authorization: 'Bearer ' + token},\r\n      wsHost = ($window.document.location.origin || ($window.location.protocol + '//' + $window.location.host)).replace(/^http/, 'ws'),\r\n      api = {events: {}};\r\n\r\n  // initiate the websocket connection to the host\r\n  var ws = api.ws = new WebSocket(wsHost + '?access_token=' + token);\r\n  $window.setInterval(function () {\r\n    ws.send('ping');\r\n  }, 1000 * 25); // keep-alive signal (needed for heroku)\r\n\r\n  // utilize jQuery's callbacks as an event system\r\n  function event() {\r\n    var callbacks = $.Callbacks();\r\n    return {\r\n      subscribe: function ($scope, fn) {\r\n        if (fn) {\r\n          // unsubscribe from event on controller destruction to prevent memory leaks\r\n          $scope.$on('$destroy', function () {\r\n            callbacks.remove(fn);\r\n          });\r\n        } else {\r\n          fn = $scope;\r\n        }\r\n        callbacks.add(fn);\r\n      },\r\n      unsubscribe: callbacks.remove,\r\n      publish: callbacks.fire\r\n    };\r\n  }\r\n\r\n  // websocket connected disconnected events\r\n  api.connected = event();\r\n  ws.onopen = function () {\r\n    api.connected.publish.apply(this, arguments);\r\n    $rootScope.$apply();\r\n  };\r\n\r\n  api.disconnected = event();\r\n  ws.onclose = function () {\r\n    api.disconnected.publish.apply(this, arguments);\r\n    $rootScope.$apply();\r\n  };\r\n\r\n  // api http endpoints and websocket events\r\n  api.buds = {\r\n    search: function (query) {\r\n      return $http({method: 'GET', url: apiBase + '/buds/search/'+ query,headers: headers});\r\n    },\r\n    childrenByType: function (budId,type) {\r\n      return $http({method: 'GET', url: apiBase + '/buds/'+ budId + '/child/' + type, headers: headers});\r\n    },\r\n    list: function () {\r\n      return $http({method: 'GET', url: apiBase + '/buds', headers: headers});\r\n    },\r\n    view: function (budId) {\r\n      return $http({method: 'GET', url: apiBase + '/buds/' + budId + '/view', headers: headers});\r\n    },\r\n    update: function (bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/update', data: bud, headers: headers});\r\n    },\r\n    updated: event(),\r\n    delete: function (budId) {\r\n      return $http({method: 'DELETE', url: apiBase + '/buds/' + budId, headers: headers});\r\n    },\r\n    create: function (bud) {\r\n      return $http({method: 'POST', url: apiBase + '/buds', data: bud, headers: headers});\r\n    },\r\n    createSub: function (parentBudId, bud) {\r\n      return $http({method: 'POST', url: apiBase + '/buds/' + parentBudId, data: bud, headers: headers});\r\n    },\r\n    created: event(),\r\n    evolve: function (bud, type) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/evolve/' + type, data: bud, headers: headers});\r\n    },\r\n    evolved: event(),\r\n    follow : function(bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/follow', data: bud, headers: headers});\r\n    },\r\n    unfollow : function(bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/unfollow', data: bud, headers: headers});\r\n    },\r\n    followersChanged: event(),\r\n    sponsor : function(bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/sponsor', data: bud, headers: headers});\r\n    },\r\n    unsponsor : function(bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/unsponsor', data: bud, headers: headers});\r\n    },\r\n    sponsorsChanged: event(),\r\n    support : function(bud, value) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/support/' + value, data: bud, headers: headers});\r\n    },\r\n    unsupport : function(bud) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/unsupport', data: bud, headers: headers});\r\n    },\r\n    supportersChanged: event(),\r\n    share : function(bud, users) {\r\n      return $http({method: 'PUT', url: apiBase + '/buds/' + bud.id + '/share', data: users, headers: headers});\r\n    },\r\n    budPacksData: {\r\n      create : function (budId, packData, type) {\r\n        return $http({method: 'POST', url: apiBase + '/buds/' + budId + '/packdata/' + type, data: packData, headers: headers});\r\n      },\r\n      get: function (budId, type) {\r\n        return $http({method: 'GET', url: apiBase + '/buds/' + budId + '/packdata/' + type, headers: headers});\r\n      },\r\n      set: function (budId, packData, type) {\r\n        return $http({method: 'PUT', url: apiBase + '/buds/' + budId + '/packdata/' + type, data: packData, headers: headers});\r\n      },\r\n      created: event(),\r\n      updated: event()\r\n    },\r\n    comments: {\r\n      create: function (budId, comment) {\r\n        return $http({method: 'POST', url: apiBase + '/buds/' + budId + '/comments', data: comment, headers: headers});\r\n      },\r\n      created: event()\r\n    }\r\n  };\r\n\r\n  api.qi = {\r\n    updated: event()\r\n  };\r\n\r\n  api.mailboxes = {\r\n    get: function () {\r\n      return $http({method: 'GET', url: apiBase + '/user/mailboxes/emails', headers: headers});\r\n    },\r\n    incoming: event()\r\n  };\r\n\r\n  api.links = {\r\n    createB2B : function (budId, type, budId2) {\r\n      return $http({method: 'POST', url: apiBase + '/links/b2b/' + budId + '/' + type + '/' + budId2, headers: headers});\r\n    },\r\n    createB2U : function (budId, type, userId) {\r\n      return $http({method: 'POST', url: apiBase + '/links/b2u/' + budId + '/' + type + '/' + userId, headers: headers});\r\n    },\r\n    createU2B : function (userId, type, budId) {\r\n      return $http({method: 'POST', url: apiBase + '/links/u2b/' + userId + '/' + type + '/' + budId, headers: headers});\r\n    },\r\n    deleteU2B : function (userId, type, budId) {\r\n      return $http({method: 'DELETE', url: apiBase + '/links/u2b/' + userId + '/' + type + '/' + budId, headers: headers});\r\n    },\r\n    findU2B : function (userId, type) {\r\n      return $http({method: 'GET', url: apiBase + '/links/u2b/' + userId + '/' + type, headers: headers});\r\n    }\r\n  };\r\n\r\n  api.users = {\r\n    list: function () {\r\n      return $http({method: 'GET', url: apiBase + '/users', headers: headers});\r\n    }\r\n  };\r\n\r\n  api.actors = {\r\n    list: function () {\r\n      return $http({method: 'GET', url: apiBase + '/actors', headers: headers});\r\n    }\r\n  };\r\n\r\n  api.events = {\r\n    list: function () {\r\n      return $http({method: 'GET', url: apiBase + '/events', headers: headers});\r\n    }\r\n  };\r\n\r\n  api.types = {\r\n    get: function (type) {\r\n      return $http({method: 'GET', url: apiBase + '/types/' + type, headers: headers})\r\n    },\r\n    list: function () {\r\n      return $http({method: 'GET', url: apiBase + '/types', headers: headers});\r\n    }\r\n  };\r\n\r\n  api.debug = {\r\n    clearDatabase: function () {\r\n      return $http({method: 'POST', url: apiBase + '/debug/clearDatabase', headers: headers});\r\n    }\r\n  };\r\n\r\n  // websocket data event (which transmits json-rpc payloads)\r\n  function index(obj, i) {\r\n    return obj[i];\r\n  } // convert dot notation string into an actual object index\r\n  ws.onmessage = function (event /* websocket event object */) {\r\n    var data = JSON.parse(event.data /* rpc event object (data) */);\r\n    if (!data.method) {\r\n      throw 'Malformed event data received through WebSocket. Received event data object was: ' + data;\r\n    } else if (!data.method.split('.').reduce(index, api)) {\r\n      throw 'Undefined event type received through WebSocket. Received event data object was: ' + data;\r\n    }\r\n    data.method.split('.').reduce(index, api).publish(data.params);\r\n    $rootScope.$apply();\r\n  };\r\n\r\n  return api;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/common/api-service.js\n ** module id = 5\n ** module chunks = 0\n **/","angular.module('qibud.dashboard',[]).controller('DashboardCtrl', ['$scope', '$cookieStore', DashboardCtrl]);\nfunction DashboardCtrl($scope, $cookieStore) {\n    /**\n     * Sidebar Toggle & Cookie Control\n     *\n     */\n\n    var mobileView = 992;\n    $scope.getWidth = function() { return window.innerWidth; };\n\n    $scope.$watch($scope.getWidth, function(newValue, oldValue)\n    {\n        if(newValue >= mobileView)\n        {\n            if(angular.isDefined($cookieStore.get('toggle')))\n            {\n                if($cookieStore.get('toggle') == false)\n                {\n                    $scope.toggle = false;\n                }\n                else\n                {\n                    $scope.toggle = true;\n                }\n            }\n            else\n            {\n                $scope.toggle = true;\n            }\n        }\n        else\n        {\n            $scope.toggle = false;\n        }\n\n    });\n\n    $scope.toggleSidebar = function()\n    {\n        $scope.toggle = ! $scope.toggle;\n\n        $cookieStore.put('toggle', $scope.toggle);\n    };\n\n    window.onresize = function() { $scope.$apply(); };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/dashboard/dashboard.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Editor module for buds\r\n */\r\n\r\nangular\r\n    .module('qibud.editor', [\r\n      'ui.router',\r\n      'qibud.common'\r\n    ])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n      $stateProvider\r\n          .state('bud.editor', {\r\n            title: 'Qibud Editor',\r\n            url: \"/editor/:budId/:parentBudId/:content\",\r\n            breadcrumb: {\r\n              class: 'highlight',\r\n              text: 'Bud Editor',\r\n              stateName: 'bud.editor'\r\n            },\r\n            templateUrl: 'modules/editor/editor.html',\r\n            controller: 'EditorCtrl'\r\n      });\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/editor/editor.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Editor controller provide a good way to edit/write buds\r\n */\r\n\r\nangular.module('qibud.editor').controller('EditorCtrl',\r\nfunction ($scope, $state, $stateParams, $location, api)\r\n{\r\n  var user       = $scope.common.user;\r\n\r\n  if($stateParams.budId)\r\n  {\r\n    api.buds.view($stateParams.budId).success(function (bud)\r\n    {\r\n      $scope.editedBud = bud;\r\n      $scope.budBox = {\r\n        title: bud.title,\r\n        content: bud.content,\r\n        privacy: bud.privacy,\r\n        type : bud.type,\r\n        disabled: false,\r\n        action: 'update'\r\n      };\r\n\r\n      $scope.setType(bud.type);\r\n    });\r\n  }\r\n  else\r\n  {\r\n    $scope.budBox  = {\r\n      title: null,\r\n      content: null,\r\n      type: 'Bud',\r\n      disabled: false,\r\n      privacy: 'Private',\r\n      action: 'create'\r\n    };\r\n  }\r\n\r\n  if($stateParams.parentBudId)\r\n  {\r\n    api.buds.view($stateParams.parentBudId).success(function (bud)\r\n    {\r\n      $scope.parentBud = bud;\r\n    });\r\n\r\n    $scope.budBox.action = 'subbud';\r\n  }\r\n\r\n  if($stateParams.content)\r\n  {\r\n    $scope.budBox.content = $stateParams.content;\r\n  }\r\n\r\n  $scope.editorOptions = {uiColor: '#000000'};\r\n\r\n  $scope.setType = function (type) {\r\n    if(type === 'Bud') {\r\n      $state.go('bud.editor');\r\n    } else {\r\n      $state.go('bud.editor.' + type);\r\n    }\r\n  };\r\n\r\n  // add bud creation functions to scope\r\n  $scope.createBud = function ($event)\r\n  {\r\n    // don't let the user type in blank lines or submit empty/whitespace only bud, or type in something when bud is being created\r\n    if (!$scope.budBox.content.length || $scope.budBox.disabled)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // disable the bud box and push the new bud to server\r\n    $scope.budBox.disabled = true;\r\n    api.buds.create({\r\n      title: $scope.budBox.title,\r\n      content: $scope.budBox.content,\r\n      privacy: $scope.budBox.privacy,\r\n      type   : $scope.budBox.type\r\n    })\r\n    .success(function (budId)\r\n    {\r\n      // clear the bud box and enable it\r\n      $scope.budBox.title = '';\r\n      $scope.budBox.content = '';\r\n      $scope.budBox.disabled = false;\r\n\r\n      //redirect\r\n      $state.go('bud.viewer',{budId : budId},{ reload: true });\r\n    })\r\n    .error(function ()\r\n    {\r\n      // don't clear the bud box but enable it so the user can re-try\r\n      $scope.budBox.disabled = false;\r\n    });\r\n  };\r\n\r\n  $scope.createSubBud = function ($event)\r\n  {\r\n    // don't let the user type in blank lines or submit empty/whitespace only bud, or type in something when bud is being created\r\n    if (!$scope.budBox.content.length || $scope.budBox.disabled)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // disable the bud box and push the new bud to server\r\n    $scope.budBox.disabled = true;\r\n    api.buds.createSub($scope.parentBud.id,{\r\n      title: $scope.budBox.title,\r\n      content: $scope.budBox.content,\r\n      privacy: $scope.budBox.privacy,\r\n      type   : $scope.budBox.type\r\n    })\r\n    .success(function (budId)\r\n    {\r\n      // clear the bud box and enable it\r\n      $scope.budBox.title = '';\r\n      $scope.budBox.content = '';\r\n      $scope.budBox.disabled = false;\r\n\r\n      //redirect\r\n      $state.go('bud.viewer',{budId : budId});\r\n    })\r\n    .error(function ()\r\n    {\r\n      // don't clear the bud box but enable it so the user can re-try\r\n      $scope.budBox.disabled = false;\r\n    });\r\n  };\r\n\r\n  $scope.updateBud = function ($event)\r\n  {\r\n    // don't let the user type in blank lines or submit empty/whitespace only bud, or type in something when bud is being created\r\n    if (!$scope.budBox.content.length || $scope.budBox.disabled)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // disable the bud box and push the new bud to server\r\n    $scope.budBox.disabled = true;\r\n\r\n    $scope.editedBud.title   = $scope.budBox.title;\r\n    $scope.editedBud.content = $scope.budBox.content;\r\n    $scope.editedBud.privacy = $scope.budBox.privacy;\r\n    $scope.editedBud.type    = $scope.budBox.type === 'Bud' ?\r\n                                '' : $scope.budBox.type;\r\n\r\n\r\n\r\n\r\n    api.buds.update($scope.editedBud).success(function (bud)\r\n    {\r\n      //redirect\r\n      $state.go('bud.viewer', {budId: $scope.editedBud.id},{ reload: true });\r\n    })\r\n    .error(function ()\r\n    {\r\n      // don't clear the bud box but enable it so the user can re-try\r\n      $scope.budBox.disabled = false;\r\n    });\r\n  };\r\n\r\n\r\n\r\n  // subscribe to websocket events to receive new buds, comments, etc.\r\n  api.buds.created.subscribe($scope, function (bud)\r\n  {\r\n\r\n  });\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/editor/editor-controller.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Home module for displaying home page content.\r\n */\r\n\r\nangular\r\n    .module('qibud.home', [\r\n      'ui.router',\r\n      'qibud.common'\r\n    ])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n      $stateProvider\r\n      .state('home.stickers', {\r\n        title: 'Dashboard',\r\n        breadcrumb: {\r\n          class: 'highlight',\r\n          text: 'Bud stickers',\r\n          stateName: 'bud.home.stickers'\r\n        },\r\n        url: \"/stickers\",\r\n        templateUrl: 'modules/home/home-stickers.html',\r\n        controller: 'HomeCtrl'\r\n      })\r\n      .state('home.budgraph', {\r\n        title: 'Bud Graph',\r\n        breadcrumb: {\r\n          class: 'highlight',\r\n          text: 'Bud Graph',\r\n          stateName: 'bud.home.budgraph'\r\n        },\r\n        url: \"/graph\",\r\n        templateUrl: 'modules/home/home-budgraph.html',\r\n        controller: 'BudgraphCtrl'\r\n      })\r\n      .state('home.timeline', {\r\n        title: 'Bud Timeline',\r\n        breadcrumb: {\r\n          class: 'highlight',\r\n          text: 'Bud Timeline',\r\n          stateName: 'bud.home.timeline'\r\n        },\r\n        url: \"/timeline\",\r\n        templateUrl: 'modules/home/home-timeline.html',\r\n        controller: 'TimelineCtrl'\r\n      });\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/home/home.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Home controller simply lists all the buds from everyone on the front page.\r\n */\r\n\r\nangular.module('qibud.home').controller('HomeCtrl',\r\nfunction ($scope, $state, api, budGraph)\r\n{\r\n  var user       = $scope.common.user;\r\n  api.buds.list().success(function (buds)\r\n  {\r\n    buds.forEach(function (bud)\r\n    {\r\n      if(bud.type || bud.type !== 'Bud') {\r\n        api.types.get (bud.type).success (function (typeInfo) {\r\n          bud.typeInfo = typeInfo;\r\n        });\r\n      }\r\n      bud.commentBox = {message: '', disabled: false};\r\n      bud.comments   = bud.comments || [];\r\n    });\r\n\r\n    $scope.buds = buds;\r\n\r\n    api.links.findU2B(user.id, 'ACTOR').success(function (buds)\r\n    {\r\n      buds.forEach(function (bud)\r\n      {\r\n        _.remove($scope.buds, function(b) { return b.id === bud._id; });\r\n        if(bud.type || bud.type !== 'Bud') {\r\n          api.types.get (bud.type).success (function (typeInfo) {\r\n            bud.typeInfo = typeInfo;\r\n          });\r\n        }\r\n        bud.commentBox = {message: '', disabled: false};\r\n        bud.comments   = bud.comments || [];\r\n      });\r\n\r\n      $scope.budsActingOn = buds;\r\n    });\r\n  });\r\n\r\n\r\n  // subscribe to websocket events to receive new buds, comments, etc.\r\n  api.buds.created.subscribe($scope, function (bud)\r\n  {\r\n    // only add the bud if we don't have it already in the buds list to avoid dupes\r\n    if (!_.some($scope.buds, function (b)\r\n    {\r\n      return b.id === bud.id;\r\n    }))\r\n    {\r\n      bud.comments = [];\r\n      bud.commentBox = {message: '', disabled: false};\r\n      $scope.buds.unshift(bud);\r\n    }\r\n  });\r\n\r\n  api.buds.comments.created.subscribe($scope, function (comment) {\r\n    var bud = _.find($scope.buds, function (bud)\r\n    {\r\n      return bud.id === comment.budId;\r\n    });\r\n\r\n    // only add the comment if we don't have it already in the bud's comments list to avoid dupes\r\n    if (bud && !_.some(bud.comments, function (c)\r\n    {\r\n      return c.id === comment.id;\r\n    }))\r\n    {\r\n      bud.comments.push(comment);\r\n    }\r\n  });\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/home/home-controller.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Home module for displaying home page content.\r\n */\r\n\r\nangular\r\n    .module('qibud.home')\r\n    .factory('budGraph', [ '$q', function( $q ) {\r\n      var cy;\r\n      var budGraph = function(buds) {\r\n        var deferred = $q.defer();\r\n\r\n        // put buds model in cy.js\r\n        var eles = [];\r\n        for( var i = 0; i < buds.length; i++ ){\r\n\r\n          eles.push({\r\n            group: 'nodes',\r\n            data: {\r\n              id: buds[i].id,\r\n              weight: 20,\r\n              label: buds[i].type,\r\n              name: '[' + buds[i].type + ']' + buds[i].title,\r\n              faveColor: '#30426a',\r\n              faveShape: buds[i].type == 'Team' ? 'octagon' : 'roundrectangle'\r\n            }\r\n          });\r\n        }\r\n\r\n        for( var i = 0; i < buds.length; i++ ){\r\n          if(buds[i].subBuds) {\r\n            for( var s = 0; s < buds[i].subBuds.length; s++ ) {\r\n              eles.push({\r\n                group: 'edges',\r\n                data: {\r\n                  source: buds[i].id,\r\n                  target: buds[i].subBuds[s].id,\r\n                  faveColor: '#30426a',\r\n                  strength: 1\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        $(function(){ // on dom ready\r\n\r\n          cy = cytoscape({\r\n            container: $('#cy')[0],\r\n\r\n            style: cytoscape.stylesheet()\r\n              .selector('node')\r\n                .css({\r\n                  'shape': 'data(faveShape)',\r\n                  'width': 'mapData(weight, 10, 10, 10, 10)',\r\n                  'content': 'data(name)',\r\n                  'text-valign': 'center',\r\n                  'text-outline-width': 2,\r\n                  'background-color': 'data(faveColor)',\r\n                  'color': '#fff',\r\n                  'box-shadow': '0 10px 18px rgba(0,0,0,.22),0 14px 45px rgba(0,0,0,.25)'\r\n                })\r\n              .selector(':selected')\r\n                .css({\r\n                  'border-width': 3,\r\n                  'border-color': '#333'\r\n                })\r\n              .selector('edge')\r\n                .css({\r\n                  'opacity': 0.666,\r\n                  'width': 'mapData(strength, 35, 50, 2, 6)',\r\n                  'target-arrow-shape': 'triangle',\r\n                  'source-arrow-shape': 'circle',\r\n                  'line-color': 'data(faveColor)',\r\n                  'source-arrow-color': 'data(faveColor)',\r\n                  'target-arrow-color': 'data(faveColor)'\r\n                })\r\n              .selector('.faded')\r\n                .css({\r\n                  'opacity': 0.25,\r\n                  'text-opacity': 0\r\n                }),\r\n\r\n            layout: {\r\n              name: 'cose',\r\n              padding: 10\r\n            },\r\n\r\n            elements: eles,\r\n\r\n            ready: function() {\r\n              deferred.resolve( this );\r\n\r\n              cy.on('cxtdrag', 'node', function(e){\r\n                var node = this;\r\n                var dy = Math.abs( e.cyPosition.x - node.position().x );\r\n                var weight = Math.round( dy*2 );\r\n\r\n                node.data('weight', weight);\r\n\r\n                fire('onWeightChange', [ node.id(), node.data('weight') ]);\r\n              });\r\n\r\n              cy.on('tap', 'node', function(e){\r\n                var node = this;\r\n                fire('onClick', [ node.id() ]);\r\n              });\r\n\r\n\r\n            }\r\n          });\r\n\r\n        }); // on dom ready\r\n\r\n        return deferred.promise;\r\n      };\r\n\r\n      budGraph.listeners = {};\r\n\r\n      function fire(e, args){\r\n        var listeners = budGraph.listeners[e];\r\n\r\n        for( var i = 0; listeners && i < listeners.length; i++ ){\r\n          var fn = listeners[i];\r\n\r\n          fn.apply( fn, args );\r\n        }\r\n      }\r\n\r\n      function listen(e, fn){\r\n        var listeners = budGraph.listeners[e] = budGraph.listeners[e] || [];\r\n\r\n        listeners.push(fn);\r\n      }\r\n\r\n      budGraph.setBudWeight = function(id, weight){\r\n        cy.$('#' + id).data('weight', weight);\r\n      };\r\n\r\n      budGraph.onWeightChange = function(fn){\r\n        listen('onWeightChange', fn);\r\n      };\r\n\r\n      budGraph.onClick = function(fn){\r\n        listen('onClick', fn);\r\n      };\r\n\r\n      return budGraph;\r\n\r\n    }]);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/home/budgraph-factory.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Home controller simply lists all the buds from everyone on the front page.\r\n */\r\n\r\nangular.module('qibud.home').controller('BudgraphCtrl',\r\nfunction ($scope, $state, api, budGraph)\r\n{\r\n  var user       = $scope.common.user;\r\n  var cy; // maybe you want a ref to cy\r\n  // (usually better to have the srv as intermediary)\r\n\r\n  var budsById = {};\r\n  // retrieve buds from server\r\n  api.buds.list().success(function (buds)\r\n  {\r\n    $scope.buds = buds;\r\n    for( var i = 0; i < $scope.buds.length; i++ ){\r\n      var p = $scope.buds[i];\r\n\r\n      budsById[ p.id ] = p;\r\n    }\r\n    buds.forEach (function (bud) {\r\n      if(bud.type !== 'Bud') {\r\n        api.buds.budPacksData.get(bud.id, bud.type)\r\n        .success(function (data) {\r\n          bud.state = data.state;\r\n        });\r\n      }\r\n    });\r\n    // you would probably want some ui to prevent use of budsCtrl until cy is loaded\r\n    budGraph( $scope.buds ).then(function( budsCy ){\r\n      cy = budsCy;\r\n      // use this variable to hide ui until cy loaded if you want\r\n      $scope.cyLoaded = true;\r\n    });\r\n  });\r\n\r\n  $scope.onWeightChange = function(bud){\r\n     budGraph.setBudWeight( bud.id, bud.qi );\r\n  };\r\n\r\n  budGraph.onWeightChange(function(id, weight){\r\n    budsById[id].qi = weight;\r\n\r\n    $scope.$apply();\r\n  });\r\n\r\n  budGraph.onClick(function(id){\r\n    $state.go('bud.viewer',{budId : id});\r\n  });\r\n\r\n  // subscribe to websocket events to receive new buds, comments, etc.\r\n  api.buds.created.subscribe($scope, function (bud)\r\n  {\r\n    // only add the bud if we don't have it already in the buds list to avoid dupes\r\n    if (!_.some($scope.buds, function (b)\r\n    {\r\n      return b.id === bud.id;\r\n    }))\r\n    {\r\n      bud.comments = [];\r\n      bud.commentBox = {message: '', disabled: false};\r\n      $scope.buds.unshift(bud);\r\n    }\r\n  });\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/home/budgraph-controller.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n *\r\n */\r\n\r\nangular.module('qibud.home').controller('TimelineCtrl',\r\nfunction ($scope, $state, api, budGraph)\r\n{\r\n  var user       = $scope.common.user;\r\n\r\n  api.events.list().success(function (events)\r\n  {\r\n    $scope.events = events;\r\n  });\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/home/timeline-controller.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Profile module for user profile and related content.\r\n */\r\n\r\nangular\r\n    .module('qibud.profile', [\r\n      'ui.router',\r\n      'qibud.common'\r\n    ])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n      $stateProvider\r\n          .state('bud.profile', {\r\n            url: \"/profile\",\r\n            title: 'User Profile',\r\n            breadcrumb: {\r\n              class: 'highlight',\r\n              text: 'User Profile',\r\n              stateName: 'bud.profile'\r\n            },\r\n            templateUrl: 'modules/profile/profile.html',\r\n            controller: 'ProfileCtrl'\r\n      });\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/profile/profile.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Profile controller gives the user the means to view/edit their public profile info.\r\n */\r\n\r\nangular.module('qibud.profile').controller('ProfileCtrl', function ($scope) {\r\n  // 'common' variable is always added to the root scope and it contains common things like user info, common functions etc.\r\n  $scope.user = $scope.common.user /* this is not needed actually. we can always directly use {{common.user}} variable directly in any view */;\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/profile/profile-controller.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Editor module for buds\r\n */\r\n\r\nangular\r\n    .module('qibud.viewer', [\r\n      'ui.router',\r\n      'ui.bootstrap',\r\n      'qibud.common'\r\n    ])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n      var types  = ['Team'];\r\n      var states = [];\r\n      var availableViews = {};\r\n\r\n      availableViews['@'] = {\r\n        controller: 'ViewerCtrl',\r\n        templateUrl: 'modules/viewer/viewer.html',\r\n      };\r\n\r\n\r\n      states.push({\r\n        name: 'bud.viewer',\r\n        sticky: true,\r\n        url: '/viewer/:budId',\r\n        views: availableViews,\r\n        breadcrumb: {\r\n          class: 'highlight',\r\n          text: 'Bud Viewer',\r\n          stateName: 'bud.viewer'\r\n        } });\r\n\r\n      angular.forEach(states, function(state) { $stateProvider.state(state); });\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/viewer/viewer.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\r\n\r\n/**\r\n * Viewer controller provide a good way to read buds\r\n */\r\n\r\nangular.module('qibud.viewer').controller('ViewerCtrl',\r\nfunction ($scope, $state, $stateParams, $modal, api)\r\n{\r\n\r\n  var user       = $scope.common.user;\r\n  $scope.typeInfo = null;\r\n  $scope.ready = false;\r\n  $scope.actionInProgress = false;\r\n  $scope.followersCount = 0;\r\n  $scope.sponsorsCount = 0;\r\n  $scope.supportersCount = 0;\r\n  $scope.supportValue = 0;\r\n  // retrieve one bud from server\r\n\r\n  $scope.load = function ()\r\n  {\r\n    $scope.ready = false;\r\n    api.buds.view($stateParams.budId).success(function (bud)\r\n    {\r\n      bud.commentBox = {message: '', disabled: false};\r\n      bud.comments   = bud.comments || [];\r\n\r\n      $scope.bud = bud;\r\n      $scope.showType ($scope.bud.type, false);\r\n      if(bud.followers)\r\n      {\r\n          $scope.followersCount = bud.followers.length;\r\n          if(bud.followers.indexOf(user.id)!== -1)\r\n          {\r\n            $scope.follower = true;\r\n          }\r\n          else\r\n          {\r\n            $scope.follower = false;\r\n          }\r\n      }\r\n      else\r\n      {\r\n        $scope.follower = false;\r\n      }\r\n\r\n      if(bud.sponsors)\r\n      {\r\n        $scope.sponsorsCount = bud.sponsors.length;\r\n        if(bud.sponsors.indexOf(user.id)!== -1)\r\n        {\r\n          $scope.sponsorer = true;\r\n        }\r\n        else\r\n        {\r\n          $scope.sponsorer = false;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        $scope.sponsorer = false;\r\n      }\r\n\r\n      if(bud.supporters)\r\n      {\r\n        $scope.supportersCount = bud.supporters.length;\r\n        if(bud.supporters.indexOf(user.id)!== -1)\r\n        {\r\n          $scope.supporter = true;\r\n        }\r\n        else\r\n        {\r\n          $scope.supporter = false;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        $scope.supporter = false;\r\n      }\r\n\r\n      $scope.ready = true;\r\n\r\n    });\r\n\r\n\r\n  }\r\n  //Init view\r\n  $scope.load();\r\n\r\n  $scope.showType = function (type, reload) {\r\n    if (type !== 'Bud') {\r\n      api.types.get (type).success (function (typeInfo) {\r\n        $scope.typeInfo = typeInfo;\r\n      });\r\n      $state.go('bud.viewer.' + type, $state.params, { reload: reload });\r\n    } else {\r\n      $state.go('bud.viewer',$state.params, { reload: reload });\r\n    }\r\n  };\r\n\r\n  $scope.evolve = function (type) {\r\n    api.buds.evolve($scope.bud, type).success(function () {\r\n\r\n    });\r\n\r\n  };\r\n\r\n  $scope.canEvolve = function ()\r\n  {\r\n    if(!$scope.bud) {\r\n      return false;\r\n    }\r\n\r\n    if($scope.bud.type === 'Bud' && $scope.bud.creator.id === user.id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  $scope.editSubBud = function () {\r\n    $state.go('bud.editor',{parentBud : $scope.bud});\r\n  };\r\n\r\n  $scope.budify = function (content) {\r\n    $state.go('bud.editor',{parentBud : $scope.bud, content: content});\r\n  };\r\n\r\n  $scope.delete = function () {\r\n    api.buds.delete($scope.bud.id).success(function (){\r\n      $state.go('home.stickers');\r\n    });\r\n  };\r\n\r\n  $scope.share = function () {\r\n    api.actors.list().success(function (actors)\r\n    {\r\n      var modalInstance = $modal.open({\r\n        templateUrl: 'sharebox.html',\r\n        controller: 'ShareboxCtrl',\r\n        size: 'lg',\r\n        resolve: {\r\n          users: function () {\r\n            return actors.users;\r\n          },\r\n          teams: function () {\r\n            return actors.teams;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function (actors) {\r\n        //share to ->\r\n        api.buds.share($scope.bud, actors).success(function (bud) {\r\n\r\n        });\r\n\r\n      }, function () {\r\n        //dismiss\r\n      });\r\n    });\r\n  };\r\n\r\n  $scope.canShare = function ()\r\n  {\r\n    var sharable = false;\r\n    if(!$scope.bud) {\r\n      return sharable;\r\n    }\r\n\r\n    var creatorId = $scope.bud.creator.id;\r\n\r\n    //TODO: Add a watch on privacy changes check actor\r\n    switch($scope.bud.privacy)\r\n    {\r\n      case 'Private':\r\n        if(creatorId === user.id)\r\n        {\r\n          sharable = true;\r\n        }\r\n      break;\r\n      case 'Private2Share':\r\n        if(creatorId === user.id)\r\n        {\r\n          sharable = true;\r\n        }\r\n      break;\r\n    case 'Free2Share':\r\n        sharable = true;\r\n      break;\r\n    }\r\n\r\n    return sharable;\r\n  };\r\n\r\n\r\n  $scope.followBud = function ($event)\r\n  {\r\n    if ($scope.actionInProgress)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    $scope.actionInProgress = true;\r\n    if(!$scope.follower)\r\n    {\r\n      api.buds.follow($scope.bud)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n      api.buds.unfollow($scope.bud)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  $scope.supportBud = function ($event)\r\n  {\r\n    if ($scope.actionInProgress)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    $scope.actionInProgress = true;\r\n\r\n    if(!$scope.supporter)\r\n    {\r\n      api.buds.support($scope.bud, $scope.supportValue)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n      api.buds.unsupport($scope.bud)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  $scope.sponsorBud = function ($event)\r\n  {\r\n    if ($scope.actionInProgress)\r\n    {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n    $scope.actionInProgress = true;\r\n\r\n    if(!$scope.sponsorer)\r\n    {\r\n      api.buds.sponsor($scope.bud)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n      api.buds.unsponsor($scope.bud)\r\n        .success(function (budId)\r\n        {\r\n          $scope.actionInProgress = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          $scope.actionInProgress = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  api.buds.followersChanged.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.bud.followers = bud.followers;\r\n      $scope.followersCount = bud.followers.length;\r\n      if(bud.followers.indexOf(user.id)!== -1)\r\n      {\r\n        $scope.follower = true;\r\n      }\r\n      else\r\n      {\r\n        $scope.follower = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  api.buds.supportersChanged.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.bud.supporters = bud.supporters;\r\n      $scope.supportersCount = bud.supporters.length;\r\n\r\n      if(bud.supporters.indexOf(user.id) !== -1)\r\n      {\r\n        $scope.supporter = true;\r\n      }\r\n      else\r\n      {\r\n        $scope.supporter = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  api.buds.sponsorsChanged.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.bud.sponsors = bud.sponsors;\r\n      $scope.sponsorsCount = bud.sponsors.length;\r\n      if(bud.sponsors.indexOf(user.id) !== -1)\r\n      {\r\n        $scope.sponsorer = true;\r\n      }\r\n      else\r\n      {\r\n        $scope.sponsorer = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  $scope.createComment = function ($event, bud)\r\n  {\r\n    // submit the message in the comment box only if user hits 'Enter (keycode 13)'\r\n    if ($event.keyCode !== 13)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // don't let the user type in blank lines or submit empty/whitespace only comment, or type in something when comment is being created\r\n    if (!bud.commentBox.message.length || bud.commentBox.disabled) {\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // disable the comment box and push the new comment to server\r\n    bud.commentBox.disabled = true;\r\n    api.buds.comments.create(bud.id, {message: bud.commentBox.message})\r\n        .success(function (commentId)\r\n        {\r\n          // only add the comment if we don't have it already in the bud's comments list to avoid dupes\r\n          if (!_.some(bud.comments, function (c) {\r\n            return c.id === commentId;\r\n          }))\r\n          {\r\n            bud.comments.push({\r\n              id: commentId,\r\n              from: user,\r\n              message: bud.commentBox.message,\r\n              createdTime: new Date()\r\n            });\r\n          }\r\n\r\n          // clear the comment field and enable it\r\n          bud.commentBox.message  = '';\r\n          bud.commentBox.disabled = false;\r\n        })\r\n        .error(function ()\r\n        {\r\n          // don't clear the comment box but enable it so the user can re-try\r\n          bud.commentBox.disabled = false;\r\n        });\r\n\r\n    // prevent default 'Enter' button behavior (create new line) as we want 'Enter' button to do submission\r\n    $event.preventDefault();\r\n  };\r\n\r\n  api.buds.comments.created.subscribe($scope, function (comment) {\r\n    // only add the comment if we don't have it already in the bud's comments list to avoid dupes\r\n    if ($scope.bud && !_.some($scope.bud.comments, function (c)\r\n    {\r\n      return c.id === comment.id;\r\n    }))\r\n    {\r\n      $scope.bud.comments.push(comment);\r\n    }\r\n  });\r\n\r\n  api.buds.updated.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.bud = bud;\r\n    }\r\n  });\r\n\r\n  api.buds.evolved.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.showType(bud.type, true);\r\n    }\r\n  });\r\n\r\n  api.qi.updated.subscribe($scope, function (bud) {\r\n    if ($scope.bud.id === bud.id)\r\n    {\r\n      $scope.bud.qi = bud.qi;\r\n    }\r\n  });\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/viewer/viewer-controller.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\n\nangular.module('qibud.viewer').controller('ShareboxCtrl', function ($scope, $modalInstance, users, teams) {\n\n  $scope.users = users;\n  $scope.teams = teams;\n  $scope.selectedUsers = [];\n\n  $scope.addUser = function (user) {\n    $scope.selectedUsers.push(user);\n    _.remove($scope.users, function(u) { return u.id === user.id; });\n  };\n\n  $scope.addTeam = function (team) {\n    angular.forEach(team.members, function (user) {\n      $scope.selectedUsers.push(user);\n      _.remove($scope.users, function(u) { return u.id === user.id; });\n    });\n  };\n\n  $scope.rmUser = function (user) {\n    $scope.users.push(user);\n    _.remove($scope.selectedUsers, function(u) { return u.id === user.id; });\n  };\n\n  $scope.ok = function () {\n    $modalInstance.close($scope.selectedUsers);\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/viewer/viewer-sharebox-controller.js\n ** module id = 18\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"qibud-mods.js"}